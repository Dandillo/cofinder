// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using cofinder.Models;

#nullable disable

namespace cofinder.Migrations
{
    [DbContext(typeof(CoFinderContext))]
    partial class CoFinderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("cofinder.Models.IndustriesList", b =>
                {
                    b.Property<int>("IndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("industry_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IndustryId"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("IndustryId")
                        .HasName("industries_list_pkey");

                    b.ToTable("industries_list", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.Post", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("news_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NewsId"));

                    b.Property<int?>("Category")
                        .HasColumnType("integer")
                        .HasColumnName("category");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Heading")
                        .HasColumnType("text")
                        .HasColumnName("heading");

                    b.Property<int?>("Likes")
                        .HasColumnType("integer")
                        .HasColumnName("likes");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.HasKey("NewsId")
                        .HasName("news_pkey");

                    b.HasIndex("Category");

                    b.HasIndex("CreatedBy");

                    b.ToTable("post", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.PostCategory", b =>
                {
                    b.Property<int>("PostCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("post_category_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostCategoryId"));

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.HasKey("PostCategoryId")
                        .HasName("post_categories_pkey");

                    b.ToTable("post_categories", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Descr")
                        .HasColumnType("text")
                        .HasColumnName("descr");

                    b.Property<int?>("Industry")
                        .HasColumnType("integer")
                        .HasColumnName("industry");

                    b.Property<string>("MainIdea")
                        .HasColumnType("text")
                        .HasColumnName("main_idea");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("NeedSpec")
                        .HasColumnType("integer")
                        .HasColumnName("need_spec");

                    b.Property<string>("ProjectLogo")
                        .HasColumnType("text")
                        .HasColumnName("project_logo");

                    b.HasKey("ProjectId")
                        .HasName("projects_pkey");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.ProjectIndustry", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<long>("IndustryEnumeration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("industry_enumeration");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IndustryEnumeration"));

                    b.Property<int?>("Industry")
                        .HasColumnType("integer")
                        .HasColumnName("industry");

                    b.HasKey("ProjectId", "IndustryEnumeration")
                        .HasName("project_industries_pkey");

                    b.HasIndex("Industry");

                    b.ToTable("project_industries", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Cases")
                        .HasColumnType("text")
                        .HasColumnName("cases");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("first_name");

                    b.Property<int?>("Industry")
                        .HasColumnType("integer")
                        .HasColumnName("industry");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PicUrl")
                        .HasColumnType("text")
                        .HasColumnName("pic_url");

                    b.Property<string>("Pswrd")
                        .HasColumnType("text")
                        .HasColumnName("pswrd");

                    b.Property<string>("SecondName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("second_name");

                    b.Property<string>("WorkExperience")
                        .HasColumnType("text")
                        .HasColumnName("work_experience");

                    b.HasKey("UserId")
                        .HasName("user_id_pkey");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.UsersIndustry", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<long>("IndustryEnumeration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("industry_enumeration");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IndustryEnumeration"));

                    b.Property<int?>("Industry")
                        .HasColumnType("integer")
                        .HasColumnName("industry");

                    b.HasKey("UserId", "IndustryEnumeration")
                        .HasName("users_industries_pkey");

                    b.HasIndex("Industry");

                    b.ToTable("users_industries", (string)null);
                });

            modelBuilder.Entity("cofinder.Models.Post", b =>
                {
                    b.HasOne("cofinder.Models.PostCategory", "CategoryNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("Category")
                        .HasConstraintName("post_category_fkey");

                    b.HasOne("cofinder.Models.User", "CreatedByNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("post_created_by_fkey");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("cofinder.Models.ProjectIndustry", b =>
                {
                    b.HasOne("cofinder.Models.IndustriesList", "IndustryNavigation")
                        .WithMany("ProjectIndustries")
                        .HasForeignKey("Industry")
                        .HasConstraintName("project_industries_industry_fkey");

                    b.HasOne("cofinder.Models.Project", "Project")
                        .WithMany("ProjectIndustries")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("project_industries_project_id_fkey");

                    b.Navigation("IndustryNavigation");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("cofinder.Models.UsersIndustry", b =>
                {
                    b.HasOne("cofinder.Models.IndustriesList", "IndustryNavigation")
                        .WithMany("UsersIndustries")
                        .HasForeignKey("Industry")
                        .HasConstraintName("users_industries_industry_fkey");

                    b.HasOne("cofinder.Models.User", "User")
                        .WithMany("UsersIndustries")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("users_industries_user_id_fkey");

                    b.Navigation("IndustryNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("cofinder.Models.IndustriesList", b =>
                {
                    b.Navigation("ProjectIndustries");

                    b.Navigation("UsersIndustries");
                });

            modelBuilder.Entity("cofinder.Models.PostCategory", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("cofinder.Models.Project", b =>
                {
                    b.Navigation("ProjectIndustries");
                });

            modelBuilder.Entity("cofinder.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("UsersIndustries");
                });
#pragma warning restore 612, 618
        }
    }
}
